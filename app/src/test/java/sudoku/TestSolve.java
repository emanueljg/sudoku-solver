package sudoku;

import static org.junit.jupiter.api.Assertions.*;
import org.opentest4j.AssertionFailedError;
import org.junit.jupiter.api.*;

class TestSolve {
    Solver s;

    @BeforeEach
    void setUp() {
        s = Solver.ofDefaults();
    }

    @AfterEach
    void tearDown() {
        s = null;
    }


    @Test
    void testSolves05c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 1);
        s.setOrClearNumber(0, 3, 7);
        s.setOrClearNumber(0, 4, 2);
        s.setOrClearNumber(0, 5, 5);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 8);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 1);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 2);
        s.setOrClearNumber(2, 1, 5);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 1);
        s.setOrClearNumber(2, 7, 3);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 7);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 5);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 1);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 6);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 9);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 8);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 4);
        s.setOrClearNumber(6, 2, 5);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 2);
        s.setOrClearNumber(6, 8, 9);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 9);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 6);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 6);
        s.setOrClearNumber(8, 4, 4);
        s.setOrClearNumber(8, 5, 8);
        s.setOrClearNumber(8, 6, 3);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves09b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 4);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 8);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 6);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 7);
        s.setOrClearNumber(2, 0, 5);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 1);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 5);
        s.setOrClearNumber(3, 3, 1);
        s.setOrClearNumber(3, 4, 9);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 6);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 4);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 5);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 3);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 9);
        s.setOrClearNumber(5, 8, 1);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 2);
        s.setOrClearNumber(6, 6, 4);
        s.setOrClearNumber(6, 7, 3);
        s.setOrClearNumber(6, 8, 6);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 9);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 8);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 2);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves02c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 1);
        s.setOrClearNumber(0, 3, 7);
        s.setOrClearNumber(0, 4, 2);
        s.setOrClearNumber(0, 5, 5);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 8);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 1);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 6);
        s.setOrClearNumber(2, 0, 2);
        s.setOrClearNumber(2, 1, 5);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 1);
        s.setOrClearNumber(2, 7, 3);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 7);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 5);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 1);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 6);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 9);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 8);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 4);
        s.setOrClearNumber(6, 2, 5);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 2);
        s.setOrClearNumber(6, 8, 9);
        s.setOrClearNumber(7, 0, 7);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 9);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 6);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 6);
        s.setOrClearNumber(8, 4, 4);
        s.setOrClearNumber(8, 5, 8);
        s.setOrClearNumber(8, 6, 3);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves12c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 7);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 8);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 6);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 3);
        s.setOrClearNumber(1, 8, 1);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 4);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 2);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 2);
        s.setOrClearNumber(3, 2, 4);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 7);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 1);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 3);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 8);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 6);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 2);
        s.setOrClearNumber(5, 7, 9);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 8);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 7);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 8);
        s.setOrClearNumber(7, 1, 6);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 5);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 2);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 6);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves16() { 
        s.setOrClearNumber(0, 0, 1);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 7);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 9);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 3);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 2);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 8);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 9);
        s.setOrClearNumber(2, 3, 6);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 5);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 5);
        s.setOrClearNumber(3, 3, 3);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 9);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 1);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 8);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 2);
        s.setOrClearNumber(5, 0, 6);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 4);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 3);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 1);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 4);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 7);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 7);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 3);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves01b() { 
        s.setOrClearNumber(0, 0, 8);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 2);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 5);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 7);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 1);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 7);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 8);
        s.setOrClearNumber(1, 5, 2);
        s.setOrClearNumber(1, 6, 4);
        s.setOrClearNumber(1, 7, 6);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 1);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 9);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 6);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 1);
        s.setOrClearNumber(3, 6, 8);
        s.setOrClearNumber(3, 7, 3);
        s.setOrClearNumber(3, 8, 2);
        s.setOrClearNumber(4, 0, 5);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 9);
        s.setOrClearNumber(5, 0, 1);
        s.setOrClearNumber(5, 1, 8);
        s.setOrClearNumber(5, 2, 4);
        s.setOrClearNumber(5, 3, 3);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 6);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 4);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 2);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 9);
        s.setOrClearNumber(7, 2, 5);
        s.setOrClearNumber(7, 3, 6);
        s.setOrClearNumber(7, 4, 1);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 3);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 3);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 8);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 9);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 6);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 7);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves08c() { 
        s.setOrClearNumber(0, 0, 9);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 3);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 2);
        s.setOrClearNumber(0, 8, 4);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 7);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 9);
        s.setOrClearNumber(1, 5, 4);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 1);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 6);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 3);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 6);
        s.setOrClearNumber(3, 2, 4);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 8);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 4);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 9);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 5);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 3);
        s.setOrClearNumber(6, 6, 7);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 5);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 1);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 8);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 6);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves13a() { 
        s.setOrClearNumber(0, 0, 7);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 3);
        s.setOrClearNumber(0, 3, 1);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 8);
        s.setOrClearNumber(0, 6, 4);
        s.setOrClearNumber(0, 7, 5);
        s.setOrClearNumber(0, 8, 9);
        s.setOrClearNumber(1, 0, 9);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 6);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 8);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 1);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 2);
        s.setOrClearNumber(3, 4, 9);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 3);
        s.setOrClearNumber(3, 7, 6);
        s.setOrClearNumber(3, 8, 7);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 7);
        s.setOrClearNumber(4, 2, 5);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 3);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 8);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 7);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 1);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 2);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 7);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 1);
        s.setOrClearNumber(6, 8, 5);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 8);
        s.setOrClearNumber(7, 2, 6);
        s.setOrClearNumber(7, 3, 3);
        s.setOrClearNumber(7, 4, 5);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 2);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 1);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves10a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 2);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 5);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 1);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 7);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 5);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 2);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 4);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 9);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 7);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 4);
        s.setOrClearNumber(3, 2, 9);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 7);
        s.setOrClearNumber(3, 7, 3);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 8);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 1);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 3);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 4);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 9);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 3);
        s.setOrClearNumber(5, 2, 6);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 2);
        s.setOrClearNumber(5, 7, 1);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 2);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 8);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 4);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 8);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 9);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 2);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 6);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 7);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 8);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves08a() { 
        s.setOrClearNumber(0, 0, 6);
        s.setOrClearNumber(0, 1, 7);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 8);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 1);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 2);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 6);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 3);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 2);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 1);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 6);
        s.setOrClearNumber(4, 0, 4);
        s.setOrClearNumber(4, 1, 8);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 1);
        s.setOrClearNumber(4, 6, 7);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 9);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 4);
        s.setOrClearNumber(6, 3, 5);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 3);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 3);
        s.setOrClearNumber(8, 3, 4);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 8);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 2);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves14c() { 
        s.setOrClearNumber(0, 0, 1);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 8);
        s.setOrClearNumber(0, 4, 4);
        s.setOrClearNumber(0, 5, 3);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 8);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 2);
        s.setOrClearNumber(1, 5, 7);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 3);
        s.setOrClearNumber(1, 8, 1);
        s.setOrClearNumber(2, 0, 6);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 4);
        s.setOrClearNumber(3, 3, 3);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 1);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 5);
        s.setOrClearNumber(4, 1, 3);
        s.setOrClearNumber(4, 2, 7);
        s.setOrClearNumber(4, 3, 9);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 8);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 1);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 4);
        s.setOrClearNumber(5, 6, 3);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 5);
        s.setOrClearNumber(6, 0, 4);
        s.setOrClearNumber(6, 1, 9);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 3);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 7);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 3);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 1);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 4);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 5);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 1);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves07b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 4);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 9);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 7);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 1);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 6);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 1);
        s.setOrClearNumber(3, 2, 3);
        s.setOrClearNumber(3, 3, 6);
        s.setOrClearNumber(3, 4, 9);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 4);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 8);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 5);
        s.setOrClearNumber(5, 4, 2);
        s.setOrClearNumber(5, 5, 8);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 6);
        s.setOrClearNumber(6, 2, 7);
        s.setOrClearNumber(6, 3, 1);
        s.setOrClearNumber(6, 4, 8);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 9);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 2);
        s.setOrClearNumber(8, 0, 9);
        s.setOrClearNumber(8, 1, 5);
        s.setOrClearNumber(8, 2, 4);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 3);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 1);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves02b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 2);
        s.setOrClearNumber(0, 2, 5);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 7);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 4);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 1);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 5);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 2);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 7);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 2);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 5);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 5);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 9);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 4);
        s.setOrClearNumber(3, 6, 8);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 7);
        s.setOrClearNumber(5, 3, 5);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 6);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 9);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 3);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 7);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 6);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 4);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 1);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 7);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 8);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 2);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 9);
        s.setOrClearNumber(8, 7, 1);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves03c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 1);
        s.setOrClearNumber(0, 3, 7);
        s.setOrClearNumber(0, 4, 2);
        s.setOrClearNumber(0, 5, 5);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 8);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 1);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 2);
        s.setOrClearNumber(2, 1, 5);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 1);
        s.setOrClearNumber(2, 7, 3);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 7);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 5);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 1);
        s.setOrClearNumber(4, 4, 8);
        s.setOrClearNumber(4, 5, 6);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 9);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 8);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 4);
        s.setOrClearNumber(6, 2, 5);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 2);
        s.setOrClearNumber(6, 8, 9);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 9);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 6);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 6);
        s.setOrClearNumber(8, 4, 4);
        s.setOrClearNumber(8, 5, 8);
        s.setOrClearNumber(8, 6, 3);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves07c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 7);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 1);
        s.setOrClearNumber(0, 6, 4);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 6);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 2);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 5);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 1);
        s.setOrClearNumber(3, 3, 7);
        s.setOrClearNumber(3, 4, 6);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 5);
        s.setOrClearNumber(3, 8, 8);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 3);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 9);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 2);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 4);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 3);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 5);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 9);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 4);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 6);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 5);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 8);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 7);
        s.setOrClearNumber(8, 7, 2);
        s.setOrClearNumber(8, 8, 1);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves04c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 5);
        s.setOrClearNumber(0, 5, 4);
        s.setOrClearNumber(0, 6, 3);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 6);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 3);
        s.setOrClearNumber(1, 6, 2);
        s.setOrClearNumber(1, 7, 7);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 7);
        s.setOrClearNumber(2, 4, 2);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 1);
        s.setOrClearNumber(3, 0, 9);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 7);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 5);
        s.setOrClearNumber(3, 8, 3);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 8);
        s.setOrClearNumber(5, 1, 2);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 1);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 9);
        s.setOrClearNumber(6, 0, 3);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 6);
        s.setOrClearNumber(6, 5, 1);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 4);
        s.setOrClearNumber(7, 2, 6);
        s.setOrClearNumber(7, 3, 9);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 7);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 1);
        s.setOrClearNumber(8, 3, 5);
        s.setOrClearNumber(8, 4, 4);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves01c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 7);
        s.setOrClearNumber(1, 0, 7);
        s.setOrClearNumber(1, 1, 2);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 3);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 9);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 1);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 8);
        s.setOrClearNumber(2, 3, 7);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 5);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 6);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 5);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 2);
        s.setOrClearNumber(3, 3, 8);
        s.setOrClearNumber(3, 4, 9);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 4);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 5);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 1);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 9);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 6);
        s.setOrClearNumber(5, 5, 3);
        s.setOrClearNumber(5, 6, 7);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 5);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 3);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 9);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 6);
        s.setOrClearNumber(6, 6, 1);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 2);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 1);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 7);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 5);
        s.setOrClearNumber(7, 8, 3);
        s.setOrClearNumber(8, 0, 9);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves11b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 8);
        s.setOrClearNumber(0, 8, 5);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 2);
        s.setOrClearNumber(1, 4, 1);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 9);
        s.setOrClearNumber(2, 0, 9);
        s.setOrClearNumber(2, 1, 6);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 8);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 1);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 5);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 8);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 1);
        s.setOrClearNumber(3, 8, 6);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 8);
        s.setOrClearNumber(5, 1, 9);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 6);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 7);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 9);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 7);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 5);
        s.setOrClearNumber(6, 8, 2);
        s.setOrClearNumber(7, 0, 3);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 5);
        s.setOrClearNumber(7, 5, 4);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 4);
        s.setOrClearNumber(8, 1, 8);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves12b() { 
        s.setOrClearNumber(0, 0, 3);
        s.setOrClearNumber(0, 1, 8);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 4);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 7);
        s.setOrClearNumber(1, 7, 8);
        s.setOrClearNumber(1, 8, 5);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 9);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 2);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 3);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 6);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 9);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 8);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 3);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 2);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 9);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 4);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 7);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 1);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 7);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 5);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 4);
        s.setOrClearNumber(7, 1, 9);
        s.setOrClearNumber(7, 2, 5);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 6);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 9);
        s.setOrClearNumber(8, 8, 2);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves14b() { 
        s.setOrClearNumber(0, 0, 8);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 6);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 5);
        s.setOrClearNumber(0, 8, 2);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 9);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 7);
        s.setOrClearNumber(1, 4, 4);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 7);
        s.setOrClearNumber(2, 2, 2);
        s.setOrClearNumber(2, 3, 6);
        s.setOrClearNumber(2, 4, 5);
        s.setOrClearNumber(2, 5, 8);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 3);
        s.setOrClearNumber(2, 8, 4);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 2);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 6);
        s.setOrClearNumber(3, 8, 3);
        s.setOrClearNumber(4, 0, 9);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 3);
        s.setOrClearNumber(4, 3, 1);
        s.setOrClearNumber(4, 4, 6);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 7);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 5);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 6);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 4);
        s.setOrClearNumber(7, 1, 1);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 3);
        s.setOrClearNumber(7, 7, 2);
        s.setOrClearNumber(7, 8, 5);
        s.setOrClearNumber(8, 0, 5);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 7);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 8);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves13b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 5);
        s.setOrClearNumber(0, 5, 9);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 2);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 9);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 7);
        s.setOrClearNumber(1, 4, 4);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 4);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 6);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 1);
        s.setOrClearNumber(2, 6, 9);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 8);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 1);
        s.setOrClearNumber(3, 2, 7);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 2);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 5);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 8);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 5);
        s.setOrClearNumber(4, 6, 7);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 2);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 3);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 4);
        s.setOrClearNumber(5, 8, 1);
        s.setOrClearNumber(6, 0, 5);
        s.setOrClearNumber(6, 1, 8);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 6);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 9);
        s.setOrClearNumber(7, 1, 3);
        s.setOrClearNumber(7, 2, 4);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 2);
        s.setOrClearNumber(7, 7, 8);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 6);
        s.setOrClearNumber(8, 2, 1);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 2);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves15a() { 
        s.setOrClearNumber(0, 0, 7);
        s.setOrClearNumber(0, 1, 9);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 3);
        s.setOrClearNumber(1, 0, 4);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 6);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 8);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 1);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 4);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 2);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 5);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 3);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 1);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 4);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 6);
        s.setOrClearNumber(5, 6, 2);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 9);
        s.setOrClearNumber(6, 0, 2);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 3);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 5);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 6);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 3);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 6);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 5);
        s.setOrClearNumber(7, 6, 4);
        s.setOrClearNumber(7, 7, 2);
        s.setOrClearNumber(7, 8, 1);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 3);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves14a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 6);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 5);
        s.setOrClearNumber(1, 0, 6);
        s.setOrClearNumber(1, 1, 2);
        s.setOrClearNumber(1, 2, 4);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 1);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 1);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 3);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 8);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 4);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 3);
        s.setOrClearNumber(3, 8, 7);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 9);
        s.setOrClearNumber(4, 3, 1);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 5);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 7);
        s.setOrClearNumber(5, 3, 5);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 9);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 8);
        s.setOrClearNumber(6, 2, 2);
        s.setOrClearNumber(6, 3, 4);
        s.setOrClearNumber(6, 4, 7);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 9);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 3);
        s.setOrClearNumber(7, 4, 1);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 2);
        s.setOrClearNumber(8, 5, 9);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 5);
        s.setOrClearNumber(8, 8, 3);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves01a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 4);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 1);
        s.setOrClearNumber(0, 7, 7);
        s.setOrClearNumber(0, 8, 9);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 2);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 8);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 5);
        s.setOrClearNumber(1, 8, 4);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 6);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 5);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 8);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 8);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 7);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 9);
        s.setOrClearNumber(3, 7, 1);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 5);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 9);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 3);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 1);
        s.setOrClearNumber(5, 2, 9);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 6);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 4);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 3);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 4);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 7);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 5);
        s.setOrClearNumber(7, 1, 7);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 1);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 2);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 9);
        s.setOrClearNumber(8, 1, 2);
        s.setOrClearNumber(8, 2, 8);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 6);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves04b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 4);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 7);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 2);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 6);
        s.setOrClearNumber(1, 2, 4);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 5);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 1);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 7);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 9);
        s.setOrClearNumber(3, 0, 2);
        s.setOrClearNumber(3, 1, 1);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 8);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 3);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 5);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 8);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 1);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 7);
        s.setOrClearNumber(5, 8, 5);
        s.setOrClearNumber(6, 0, 9);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 7);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 8);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 8);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 9);
        s.setOrClearNumber(7, 7, 2);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 5);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 7);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 2);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves06b() { 
        s.setOrClearNumber(0, 0, 3);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 2);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 6);
        s.setOrClearNumber(0, 5, 5);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 4);
        s.setOrClearNumber(0, 8, 7);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 5);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 3);
        s.setOrClearNumber(1, 5, 4);
        s.setOrClearNumber(1, 6, 1);
        s.setOrClearNumber(1, 7, 8);
        s.setOrClearNumber(1, 8, 2);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 9);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 1);
        s.setOrClearNumber(2, 4, 7);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 6);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 2);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 6);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 9);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 3);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 8);
        s.setOrClearNumber(4, 0, 1);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 2);
        s.setOrClearNumber(4, 7, 7);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 8);
        s.setOrClearNumber(5, 2, 9);
        s.setOrClearNumber(5, 3, 5);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 3);
        s.setOrClearNumber(5, 6, 4);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 4);
        s.setOrClearNumber(6, 1, 7);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 3);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 5);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 6);
        s.setOrClearNumber(7, 4, 4);
        s.setOrClearNumber(7, 5, 8);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 9);
        s.setOrClearNumber(7, 8, 1);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 2);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves03a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 5);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 2);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 3);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 5);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 8);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 9);
        s.setOrClearNumber(2, 1, 6);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 7);
        s.setOrClearNumber(2, 5, 8);
        s.setOrClearNumber(2, 6, 2);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 3);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 2);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 7);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 8);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 1);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 3);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 4);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 8);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 1);
        s.setOrClearNumber(6, 3, 6);
        s.setOrClearNumber(6, 4, 4);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 3);
        s.setOrClearNumber(6, 8, 2);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 7);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 5);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 1);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 9);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 5);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves05a() { 
        s.setOrClearNumber(0, 0, 1);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 5);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 3);
        s.setOrClearNumber(0, 7, 7);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 2);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 9);
        s.setOrClearNumber(2, 2, 7);
        s.setOrClearNumber(2, 3, 3);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 1);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 5);
        s.setOrClearNumber(3, 5, 3);
        s.setOrClearNumber(3, 6, 1);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 2);
        s.setOrClearNumber(4, 0, 3);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 8);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 1);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 4);
        s.setOrClearNumber(5, 0, 2);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 1);
        s.setOrClearNumber(5, 3, 4);
        s.setOrClearNumber(5, 4, 7);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 7);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 8);
        s.setOrClearNumber(6, 6, 6);
        s.setOrClearNumber(6, 7, 4);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 8);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 1);
        s.setOrClearNumber(8, 2, 2);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 8);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 7);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves08b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 1);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 4);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 7);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 7);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 5);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 2);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 1);
        s.setOrClearNumber(3, 2, 7);
        s.setOrClearNumber(3, 3, 6);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 5);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 6);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 3);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 8);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 2);
        s.setOrClearNumber(5, 6, 6);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 9);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 4);
        s.setOrClearNumber(6, 8, 5);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 9);
        s.setOrClearNumber(7, 3, 2);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 8);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 8);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 3);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves15b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 8);
        s.setOrClearNumber(0, 4, 1);
        s.setOrClearNumber(0, 5, 5);
        s.setOrClearNumber(0, 6, 4);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 1);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 5);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 3);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 4);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 1);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 1);
        s.setOrClearNumber(3, 2, 9);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 8);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 6);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 4);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 2);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 8);
        s.setOrClearNumber(5, 3, 7);
        s.setOrClearNumber(5, 4, 9);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 1);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 4);
        s.setOrClearNumber(6, 8, 3);
        s.setOrClearNumber(7, 0, 8);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 2);
        s.setOrClearNumber(7, 7, 9);
        s.setOrClearNumber(7, 8, 7);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 6);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 2);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves09c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 2);
        s.setOrClearNumber(0, 2, 7);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 8);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 1);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 7);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 4);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 3);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 8);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 5);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 9);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 7);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 2);
        s.setOrClearNumber(5, 5, 8);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 9);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 6);
        s.setOrClearNumber(6, 5, 7);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 5);
        s.setOrClearNumber(7, 1, 8);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 3);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 4);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 5);
        s.setOrClearNumber(8, 8, 6);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves02a() { 
        s.setOrClearNumber(0, 0, 2);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 6);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 4);
        s.setOrClearNumber(0, 8, 9);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 3);
        s.setOrClearNumber(1, 2, 7);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 9);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 1);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 7);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 6);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 5);
        s.setOrClearNumber(3, 4, 8);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 9);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 7);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 5);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 8);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 4);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 9);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 6);
        s.setOrClearNumber(5, 5, 2);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 9);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 4);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 1);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 3);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 4);
        s.setOrClearNumber(7, 7, 9);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 4);
        s.setOrClearNumber(8, 1, 1);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 2);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 8);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves11a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 7);
        s.setOrClearNumber(1, 2, 9);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 5);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 1);
        s.setOrClearNumber(1, 7, 8);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 8);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 7);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 7);
        s.setOrClearNumber(3, 3, 3);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 6);
        s.setOrClearNumber(3, 6, 8);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 4);
        s.setOrClearNumber(4, 1, 5);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 7);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 8);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 9);
        s.setOrClearNumber(4, 8, 6);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 3);
        s.setOrClearNumber(5, 3, 5);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 2);
        s.setOrClearNumber(5, 6, 7);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 7);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 5);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 1);
        s.setOrClearNumber(7, 2, 6);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 3);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 4);
        s.setOrClearNumber(7, 7, 2);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves09a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 9);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 3);
        s.setOrClearNumber(0, 4, 8);
        s.setOrClearNumber(0, 5, 4);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 2);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 7);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 7);
        s.setOrClearNumber(2, 8, 1);
        s.setOrClearNumber(3, 0, 5);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 3);
        s.setOrClearNumber(3, 6, 2);
        s.setOrClearNumber(3, 7, 4);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 3);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 1);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 5);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 9);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 8);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 7);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 6);
        s.setOrClearNumber(7, 3, 5);
        s.setOrClearNumber(7, 4, 2);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 6);
        s.setOrClearNumber(8, 6, 4);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves05b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 1);
        s.setOrClearNumber(0, 3, 3);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 7);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 2);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 6);
        s.setOrClearNumber(1, 3, 2);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 1);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 2);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 4);
        s.setOrClearNumber(3, 0, 2);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 6);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 1);
        s.setOrClearNumber(3, 6, 3);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 9);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 4);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 3);
        s.setOrClearNumber(5, 3, 8);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 9);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 7);
        s.setOrClearNumber(6, 0, 1);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 8);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 5);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 6);
        s.setOrClearNumber(7, 6, 4);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 9);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 4);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 8);
        s.setOrClearNumber(8, 6, 5);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves12a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 3);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 1);
        s.setOrClearNumber(0, 8, 7);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 1);
        s.setOrClearNumber(1, 2, 5);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 9);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 8);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 6);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 1);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 7);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 9);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 2);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 5);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 4);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 2);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 5);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 6);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 3);
        s.setOrClearNumber(7, 7, 4);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 3);
        s.setOrClearNumber(8, 1, 4);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 2);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves11c() { 
        s.setOrClearNumber(0, 0, 7);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 4);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 1);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 2);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 6);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 8);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 1);
        s.setOrClearNumber(2, 3, 5);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 2);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 8);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 9);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 7);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 5);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 3);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 7);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 2);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 6);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 5);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 8);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 8);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 9);
        s.setOrClearNumber(6, 6, 1);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 9);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 1);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 6);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 5);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 8);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 3);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves04a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 5);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 9);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 4);
        s.setOrClearNumber(1, 3, 8);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 9);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 1);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 7);
        s.setOrClearNumber(2, 6, 2);
        s.setOrClearNumber(2, 7, 8);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 5);
        s.setOrClearNumber(3, 1, 6);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 1);
        s.setOrClearNumber(3, 7, 3);
        s.setOrClearNumber(3, 8, 7);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 1);
        s.setOrClearNumber(5, 1, 7);
        s.setOrClearNumber(5, 2, 3);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 4);
        s.setOrClearNumber(5, 8, 2);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 2);
        s.setOrClearNumber(6, 2, 1);
        s.setOrClearNumber(6, 3, 5);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 8);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 6);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 3);
        s.setOrClearNumber(7, 6, 8);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 1);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 6);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves13c() { 
        s.setOrClearNumber(0, 0, 9);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 7);
        s.setOrClearNumber(0, 3, 5);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 1);
        s.setOrClearNumber(0, 6, 8);
        s.setOrClearNumber(0, 7, 2);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 3);
        s.setOrClearNumber(1, 2, 5);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 2);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 1);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 1);
        s.setOrClearNumber(2, 2, 8);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 6);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 3);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 2);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 9);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 9);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 6);
        s.setOrClearNumber(4, 4, 5);
        s.setOrClearNumber(4, 5, 2);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 1);
        s.setOrClearNumber(5, 0, 1);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 2);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 4);
        s.setOrClearNumber(5, 5, 9);
        s.setOrClearNumber(5, 6, 5);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 3);
        s.setOrClearNumber(6, 1, 8);
        s.setOrClearNumber(6, 2, 6);
        s.setOrClearNumber(6, 3, 4);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 7);
        s.setOrClearNumber(7, 1, 5);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 2);
        s.setOrClearNumber(7, 4, 1);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 6);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 4);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 8);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves06a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 8);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 6);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 9);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 2);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 3);
        s.setOrClearNumber(1, 6, 6);
        s.setOrClearNumber(1, 7, 7);
        s.setOrClearNumber(1, 8, 8);
        s.setOrClearNumber(2, 0, 7);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 6);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 5);
        s.setOrClearNumber(2, 5, 1);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 4);
        s.setOrClearNumber(3, 0, 9);
        s.setOrClearNumber(3, 1, 7);
        s.setOrClearNumber(3, 2, 3);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 4);
        s.setOrClearNumber(3, 5, 8);
        s.setOrClearNumber(3, 6, 1);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 6);
        s.setOrClearNumber(4, 1, 2);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 3);
        s.setOrClearNumber(4, 5, 9);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 5);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 1);
        s.setOrClearNumber(5, 3, 7);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 5);
        s.setOrClearNumber(6, 1, 8);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 9);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 3);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 6);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 4);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 5);
        s.setOrClearNumber(8, 6, 7);
        s.setOrClearNumber(8, 7, 2);
        s.setOrClearNumber(8, 8, 1);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves15c() { 
        s.setOrClearNumber(0, 0, 7);
        s.setOrClearNumber(0, 1, 9);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 3);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 6);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 8);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 1);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 4);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 2);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 5);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 3);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 1);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 4);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 6);
        s.setOrClearNumber(5, 6, 2);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 9);
        s.setOrClearNumber(6, 0, 2);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 3);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 6);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 3);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 6);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 5);
        s.setOrClearNumber(7, 6, 4);
        s.setOrClearNumber(7, 7, 2);
        s.setOrClearNumber(7, 8, 1);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves10c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 6);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 2);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 4);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 5);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 1);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 8);
        s.setOrClearNumber(2, 2, 5);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 1);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 6);
        s.setOrClearNumber(2, 7, 2);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 3);
        s.setOrClearNumber(3, 2, 8);
        s.setOrClearNumber(3, 3, 2);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 6);
        s.setOrClearNumber(3, 6, 7);
        s.setOrClearNumber(3, 7, 1);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 1);
        s.setOrClearNumber(5, 2, 9);
        s.setOrClearNumber(5, 3, 4);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 7);
        s.setOrClearNumber(5, 6, 3);
        s.setOrClearNumber(5, 7, 5);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 2);
        s.setOrClearNumber(6, 2, 6);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 4);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 5);
        s.setOrClearNumber(6, 7, 3);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 9);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 2);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 7);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 8);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 9);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves03b() { 
        s.setOrClearNumber(0, 0, 8);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 2);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 4);
        s.setOrClearNumber(0, 8, 6);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 7);
        s.setOrClearNumber(1, 3, 9);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 1);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 5);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 5);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 3);
        s.setOrClearNumber(3, 8, 2);
        s.setOrClearNumber(4, 0, 4);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 8);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 7);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 1);
        s.setOrClearNumber(5, 0, 3);
        s.setOrClearNumber(5, 1, 2);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 7);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 6);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 0);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 9);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 3);
        s.setOrClearNumber(7, 6, 2);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 2);
        s.setOrClearNumber(8, 1, 8);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 6);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 3);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves10b() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 5);
        s.setOrClearNumber(0, 2, 0);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 1);
        s.setOrClearNumber(0, 5, 0);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 4);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 1);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 7);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 6);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 2);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 0);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 9);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 5);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 2);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 8);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 3);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 5);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 1);
        s.setOrClearNumber(4, 0, 0);
        s.setOrClearNumber(4, 1, 4);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 7);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 0);
        s.setOrClearNumber(4, 7, 2);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 9);
        s.setOrClearNumber(5, 1, 0);
        s.setOrClearNumber(5, 2, 1);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 8);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 4);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 6);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 4);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 1);
        s.setOrClearNumber(6, 6, 0);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 0);
        s.setOrClearNumber(7, 0, 3);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 4);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 7);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 9);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 2);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 6);
        s.setOrClearNumber(8, 5, 0);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 1);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves07a() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 0);
        s.setOrClearNumber(0, 2, 2);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 0);
        s.setOrClearNumber(0, 5, 4);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 0);
        s.setOrClearNumber(1, 1, 0);
        s.setOrClearNumber(1, 2, 8);
        s.setOrClearNumber(1, 3, 6);
        s.setOrClearNumber(1, 4, 0);
        s.setOrClearNumber(1, 5, 0);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 0);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 0);
        s.setOrClearNumber(2, 1, 9);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 0);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 0);
        s.setOrClearNumber(2, 7, 3);
        s.setOrClearNumber(2, 8, 0);
        s.setOrClearNumber(3, 0, 8);
        s.setOrClearNumber(3, 1, 0);
        s.setOrClearNumber(3, 2, 0);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 6);
        s.setOrClearNumber(3, 5, 2);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 0);
        s.setOrClearNumber(3, 8, 0);
        s.setOrClearNumber(4, 0, 1);
        s.setOrClearNumber(4, 1, 4);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 3);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 5);
        s.setOrClearNumber(4, 7, 0);
        s.setOrClearNumber(4, 8, 9);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 7);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 0);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 0);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 3);
        s.setOrClearNumber(6, 2, 5);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 8);
        s.setOrClearNumber(6, 6, 6);
        s.setOrClearNumber(6, 7, 0);
        s.setOrClearNumber(6, 8, 7);
        s.setOrClearNumber(7, 0, 0);
        s.setOrClearNumber(7, 1, 0);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 0);
        s.setOrClearNumber(7, 4, 0);
        s.setOrClearNumber(7, 5, 0);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 4);
        s.setOrClearNumber(7, 8, 2);
        s.setOrClearNumber(8, 0, 0);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 9);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 1);
        s.setOrClearNumber(8, 6, 0);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 3);
        s.solve();
        assertTrue(s.isAllValid());
    }

    @Test
    void testSolves06c() { 
        s.setOrClearNumber(0, 0, 0);
        s.setOrClearNumber(0, 1, 7);
        s.setOrClearNumber(0, 2, 1);
        s.setOrClearNumber(0, 3, 0);
        s.setOrClearNumber(0, 4, 3);
        s.setOrClearNumber(0, 5, 9);
        s.setOrClearNumber(0, 6, 0);
        s.setOrClearNumber(0, 7, 0);
        s.setOrClearNumber(0, 8, 0);
        s.setOrClearNumber(1, 0, 4);
        s.setOrClearNumber(1, 1, 6);
        s.setOrClearNumber(1, 2, 0);
        s.setOrClearNumber(1, 3, 0);
        s.setOrClearNumber(1, 4, 7);
        s.setOrClearNumber(1, 5, 5);
        s.setOrClearNumber(1, 6, 0);
        s.setOrClearNumber(1, 7, 1);
        s.setOrClearNumber(1, 8, 0);
        s.setOrClearNumber(2, 0, 8);
        s.setOrClearNumber(2, 1, 3);
        s.setOrClearNumber(2, 2, 0);
        s.setOrClearNumber(2, 3, 0);
        s.setOrClearNumber(2, 4, 6);
        s.setOrClearNumber(2, 5, 0);
        s.setOrClearNumber(2, 6, 7);
        s.setOrClearNumber(2, 7, 0);
        s.setOrClearNumber(2, 8, 2);
        s.setOrClearNumber(3, 0, 0);
        s.setOrClearNumber(3, 1, 4);
        s.setOrClearNumber(3, 2, 2);
        s.setOrClearNumber(3, 3, 0);
        s.setOrClearNumber(3, 4, 0);
        s.setOrClearNumber(3, 5, 0);
        s.setOrClearNumber(3, 6, 0);
        s.setOrClearNumber(3, 7, 5);
        s.setOrClearNumber(3, 8, 8);
        s.setOrClearNumber(4, 0, 6);
        s.setOrClearNumber(4, 1, 0);
        s.setOrClearNumber(4, 2, 0);
        s.setOrClearNumber(4, 3, 0);
        s.setOrClearNumber(4, 4, 0);
        s.setOrClearNumber(4, 5, 0);
        s.setOrClearNumber(4, 6, 9);
        s.setOrClearNumber(4, 7, 7);
        s.setOrClearNumber(4, 8, 0);
        s.setOrClearNumber(5, 0, 0);
        s.setOrClearNumber(5, 1, 1);
        s.setOrClearNumber(5, 2, 0);
        s.setOrClearNumber(5, 3, 5);
        s.setOrClearNumber(5, 4, 0);
        s.setOrClearNumber(5, 5, 0);
        s.setOrClearNumber(5, 6, 0);
        s.setOrClearNumber(5, 7, 0);
        s.setOrClearNumber(5, 8, 4);
        s.setOrClearNumber(6, 0, 0);
        s.setOrClearNumber(6, 1, 0);
        s.setOrClearNumber(6, 2, 0);
        s.setOrClearNumber(6, 3, 0);
        s.setOrClearNumber(6, 4, 0);
        s.setOrClearNumber(6, 5, 8);
        s.setOrClearNumber(6, 6, 4);
        s.setOrClearNumber(6, 7, 6);
        s.setOrClearNumber(6, 8, 9);
        s.setOrClearNumber(7, 0, 7);
        s.setOrClearNumber(7, 1, 9);
        s.setOrClearNumber(7, 2, 0);
        s.setOrClearNumber(7, 3, 3);
        s.setOrClearNumber(7, 4, 4);
        s.setOrClearNumber(7, 5, 2);
        s.setOrClearNumber(7, 6, 0);
        s.setOrClearNumber(7, 7, 0);
        s.setOrClearNumber(7, 8, 0);
        s.setOrClearNumber(8, 0, 5);
        s.setOrClearNumber(8, 1, 0);
        s.setOrClearNumber(8, 2, 0);
        s.setOrClearNumber(8, 3, 0);
        s.setOrClearNumber(8, 4, 0);
        s.setOrClearNumber(8, 5, 1);
        s.setOrClearNumber(8, 6, 3);
        s.setOrClearNumber(8, 7, 0);
        s.setOrClearNumber(8, 8, 0);
        s.solve();
        assertTrue(s.isAllValid());
    }
}